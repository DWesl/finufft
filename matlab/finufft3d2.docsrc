% FINUFFT3D2   3D complex nonuniform FFT of type 2 (uniform to nonuniform).
%
% [c ier] = finufft3d2(x,y,z,isign,eps,f)
% [c ier] = finufft3d2(x,y,z,isign,eps,f,opts)
%
% This computes, to relative precision eps, via a fast algorithm:
%
%    c[j] =   SUM   f[k1,k2,k3] exp(+/-i (k1 x[j] + k2 y[j] + k3 z[j]))
%           k1,k2,k3
%                            for j = 1,..,nj
%     where sum is over -ms/2 <= k1 <= (ms-1)/2, -mt/2 <= k2 <= (mt-1)/2,
%                       -mu/2 <= k3 <= (mu-1)/2.
%
%  Inputs:
%     x,y,z location of NU targets on cube [-3pi,3pi]^3, each length nj
%     f     size (ms,mt,mu) complex Fourier transform value matrix
%           (ordering given by opts.modeord in each dimension; ms fastest to mu
%            slowest).
%     isign  if >=0, uses + sign in exponential, otherwise - sign.
%     eps    precision requested (>1e-16)
STARTOPTS
STOPOPTS
%  Outputs:
%     c     complex double array of nj answers at the targets.
STARTTAIL
STOPTAIL
